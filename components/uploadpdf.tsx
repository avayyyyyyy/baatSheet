/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/7UK8AFuljdo
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import {
  Dialog,
  DialogTrigger,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogDescription,
  DialogFooter,
  DialogClose,
} from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { ArrowDownNarrowWide, PlusCircleIcon, RocketIcon } from "lucide-react";
import { useDropzone } from "react-dropzone";
import { useCallback } from "react";

export function Uploadpdf() {
  const onDrop = useCallback((acceptedFiles: File[]) => {
    // Do something with the files
    console.log(acceptedFiles);
  }, []);
  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });

  return (
    <Dialog>
      <DialogTrigger asChild>
        <Button className="h-80 w-60 drop-shadow bg-[#fe640b]/10 border-2 border-[#fe640b] hover:bg-[#fe640b]/10 flex flex-col gap-y-1 text-[#fe640b]">
          <div>
            <PlusCircleIcon />
          </div>
          <div className="text-[#fe640b]">Add a new document</div>
        </Button>
      </DialogTrigger>
      <DialogContent className="sm:max-w-[500px]">
        <DialogHeader>
          <DialogTitle>Upload PDF Files</DialogTitle>
          <DialogDescription>
            Drag and drop your PDF files here or click to select.
          </DialogDescription>
        </DialogHeader>
        <div className="mt-6 flex justify-center" {...getRootProps()}>
          <div>
            <div className="flex bg-[#fe640b]/10 h-48 w-full flex-col items-center justify-center rounded-md border-2 border-dashed border-[#fe640b] p-4 text-center">
              <input {...getInputProps()} />
              {isDragActive ? (
                <div className="w-96  flex items-center flex-col justify-center">
                  <RocketIcon className="h-10 w-10 text-[#fe640b] animate-bounce" />
                  <p className="mt-4 text-sm font-medium text-[#fe640b]">
                    Drop the files here...
                  </p>
                  <p className="mt-2 text-xs text-[#fe640b]">
                    excited to read your docs ðŸ˜™
                  </p>
                </div>
              ) : (
                <div className="w-96  flex items-center flex-col justify-center">
                  <CloudUploadIcon className="h-10 w-10 text-[#fe640b]" />
                  <p className="mt-4 text-sm font-medium text-[#fe640b]">
                    Drag and drop files or click to upload
                  </p>
                  <p className="mt-2 text-xs text-[#fe640b]">
                    Supported file types: PDF
                  </p>
                </div>
              )}
            </div>
          </div>
        </div>
        <DialogFooter>
          <div>
            <Button variant="default">Submit</Button>
          </div>
        </DialogFooter>
      </DialogContent>
    </Dialog>
  );
}

function CloudUploadIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242" />
      <path d="M12 12v9" />
      <path d="m16 16-4-4-4 4" />
    </svg>
  );
}

function XIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M18 6 6 18" />
      <path d="m6 6 12 12" />
    </svg>
  );
}
